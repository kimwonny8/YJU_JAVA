package A;
//String[] arr= a.split("\s"); 문자열 공백기준으로 자르기
//Arrays.sort(arr, Collections.reverseOrder()); 내림차순정렬
/*문자열배열 인트배열로 String[] arr=a.split(",");
 * int[] result =new int[arr.length]; 
	result[i]= Integer.parseInt(arr[i]); */

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		Stack<Integer> stack =new Stack<Integer>();
		int n=Integer.parseInt(bf.readLine());
		
		for(int i=0; i<n; i++) {
			String a=bf.readLine(); 
			if(a.equals("push")) {
				int b=Integer.parseInt(bf.readLine());
				stack.push(b); 
			}
			else if(a.equals("top")) {
				if(stack.size()==0) System.out.println("-1");
				else System.out.println(stack.peek());
			}
			else if(a.equals("size")) System.out.println(stack.size());
			else if(a.equals("empty")) {
				if(stack.size()==0) System.out.println("1");
				else System.out.println("0");
			}
			else if(a.equals("pop")) {
				if(stack.size()==0) System.out.println("-1");
				else {
					System.out.println(stack.peek());
					stack.pop();

				}
			}
		}
	}
}